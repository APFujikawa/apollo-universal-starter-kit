type User {
    id: Int!
    username: String!
    isAdmin: Boolean
}

type AuthPayload {
    token: String!
    refreshToken: String!
}

extend type Query {
    users: [User]
    user(id: Int!): User
    currentUser: User
}

extend type Mutation {
    register(input: RegisterUserInput!): User!
    login(input: LoginUserInput!): AuthPayload!
    refreshTokens(token: String!, refreshToken: String!): AuthPayload!
}

input RegisterUserInput {
    username: String!
    email: String!
    password: String!
}

input LoginUserInput {
    email: String!
    password: String!
}

extend type Subscription {
}
