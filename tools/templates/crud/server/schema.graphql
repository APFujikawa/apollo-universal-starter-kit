### schema type definitions
type $Module$ {
  id: Int!
  name: String!
}
### end schema type definitions

type $Module$s {
  pageInfo: PageInfo
  edges: [$Module$]
}

type $Module$Payload {
  node: $Module$
  errors: [FieldError!]
}

input OrderBy$Module$Input {
  column: String
  order: String
}

input Filter$Module$Input {
  searchText: String
}

input Add$Module$Input {
  name: String!
}

input Edit$Module$Input {
  id: Int!
  name: String!
}

extend type Query {
  $module$s(limit: Int, offset: Int, orderBy: OrderBy$Module$Input, filter: Filter$Module$Input): $Module$s
  $module$(id: Int!): $Module$
}

extend type Mutation {
  add$Module$(input: Add$Module$Input!): $Module$Payload!
  edit$Module$(input: Edit$Module$Input!): $Module$Payload!
  delete$Module$(id: Int!): $Module$Payload!
}

extend type Subscription {
}